{"version":3,"file":"DropTarget.js","sourceRoot":"","sources":["../../src/decorators/DropTarget.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAEhD,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAA;AACjD,OAAO,EAAE,cAAc,EAAE,MAAM,wBAAwB,CAAA;AACvD,OAAO,EAAE,WAAW,EAAE,MAAM,sBAAsB,CAAA;AAClD,OAAO,EAAE,eAAe,EAAE,MAAM,2BAA2B,CAAA;AAC3D,OAAO,EAAE,qBAAqB,EAAE,MAAM,iCAAiC,CAAA;AAOvE,OAAO,EAAE,uBAAuB,EAAE,MAAM,SAAS,CAAA;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAA;AAE3D;;;;;;GAMG;AACH,MAAM,UAAU,UAAU,CACzB,IAAyD,EACzD,IAAmC,EACnC,OAA2D,EAC3D,UAAqC,EAAE;IAEvC,uBAAuB,CACtB,YAAY,EACZ,gCAAgC,EAChC,IAAI,EACJ,IAAI,EACJ,OAAO,EACP,OAAO,CACP,CAAA;IACD,IAAI,OAAO,GAAyC,IAErC,CAAA;IACf,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;QAC/B,SAAS,CACR,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,EACvB,qEAAqE;YACpE,yEAAyE;YACzE,2CAA2C;YAC3C,sEAAsE,EACvE,IAAI,CACJ,CAAA;QACD,OAAO,GAAG,GAAG,EAAE,CAAC,IAAI,CAAA;KACpB;IACD,SAAS,CACR,aAAa,CAAC,IAAI,CAAC,EACnB,sEAAsE;QACrE,wCAAwC;QACxC,sEAAsE,EACvE,IAAI,CACJ,CAAA;IACD,MAAM,YAAY,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAA;IAC9C,SAAS,CACR,OAAO,OAAO,KAAK,UAAU,EAC7B,wEAAwE;QACvE,6DAA6D;QAC7D,wBAAwB;QACxB,sEAAsE,EACvE,OAAO,CACP,CAAA;IACD,SAAS,CACR,aAAa,CAAC,OAAO,CAAC,EACtB,yEAAyE;QACxE,iCAAiC;QACjC,wBAAwB;QACxB,sEAAsE,EACvE,OAAO,CACP,CAAA;IAED,OAAQ,SAAS,cAAc,CAE7B,kBAAiC;QAClC,OAAO,eAAe,CAA4C;YACjE,oBAAoB,EAAE,YAAY;YAClC,aAAa,EAAE,YAAmB;YAClC,eAAe,EAAE,cAAc;YAC/B,aAAa,EAAE,CAAC,OAAwB,EAAE,EAAE,CAC3C,IAAI,qBAAqB,CAAC,OAAO,CAAC;YACnC,eAAe,EAAE,CAAC,OAAY,EAAE,EAAE,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC;YAC/D,kBAAkB;YAClB,OAAO;YACP,OAAO;YACP,OAAO;SACP,CAAC,CAAA;IACH,CAAiD,CAAA;AAClD,CAAC","sourcesContent":["import { ComponentType as RComponentType } from 'react'\nimport { TargetType, DragDropManager } from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport { DndOptions } from '../interfaces'\nimport { isPlainObject } from '../utils/js_utils'\nimport { registerTarget } from '../common/registration'\nimport { isValidType } from '../utils/isValidType'\nimport { TargetConnector } from '../common/TargetConnector'\nimport { DropTargetMonitorImpl } from '../common/DropTargetMonitorImpl'\nimport {\n\tDropTargetSpec,\n\tDropTargetCollector,\n\tDndComponentEnhancer,\n\tDndComponent,\n} from './interfaces'\nimport { checkDecoratorArguments } from './utils'\nimport { decorateHandler } from './decorateHandler'\nimport { createTargetFactory } from './createTargetFactory'\n\n/**\n * @deprecated - The decorator-based API will be removed in a future major version\n * @param type The accepted target type\n * @param spec The DropTarget specification\n * @param collect The props collector function\n * @param options Options\n */\nexport function DropTarget<RequiredProps, CollectedProps = any>(\n\ttype: TargetType | ((props: RequiredProps) => TargetType),\n\tspec: DropTargetSpec<RequiredProps>,\n\tcollect: DropTargetCollector<CollectedProps, RequiredProps>,\n\toptions: DndOptions<RequiredProps> = {},\n): DndComponentEnhancer<CollectedProps> {\n\tcheckDecoratorArguments(\n\t\t'DropTarget',\n\t\t'type, spec, collect[, options]',\n\t\ttype,\n\t\tspec,\n\t\tcollect,\n\t\toptions,\n\t)\n\tlet getType: (props: RequiredProps) => TargetType = type as (\n\t\tprops: RequiredProps,\n\t) => TargetType\n\tif (typeof type !== 'function') {\n\t\tinvariant(\n\t\t\tisValidType(type, true),\n\t\t\t'Expected \"type\" provided as the first argument to DropTarget to be ' +\n\t\t\t\t'a string, an array of strings, or a function that returns either given ' +\n\t\t\t\t'the current props. Instead, received %s. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target',\n\t\t\ttype,\n\t\t)\n\t\tgetType = () => type\n\t}\n\tinvariant(\n\t\tisPlainObject(spec),\n\t\t'Expected \"spec\" provided as the second argument to DropTarget to be ' +\n\t\t\t'a plain object. Instead, received %s. ' +\n\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target',\n\t\tspec,\n\t)\n\tconst createTarget = createTargetFactory(spec)\n\tinvariant(\n\t\ttypeof collect === 'function',\n\t\t'Expected \"collect\" provided as the third argument to DropTarget to be ' +\n\t\t\t'a function that returns a plain object of props to inject. ' +\n\t\t\t'Instead, received %s. ' +\n\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target',\n\t\tcollect,\n\t)\n\tinvariant(\n\t\tisPlainObject(options),\n\t\t'Expected \"options\" provided as the fourth argument to DropTarget to be ' +\n\t\t\t'a plain object when specified. ' +\n\t\t\t'Instead, received %s. ' +\n\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target',\n\t\tcollect,\n\t)\n\n\treturn (function decorateTarget<\n\t\tComponentType extends RComponentType<RequiredProps & CollectedProps>\n\t>(DecoratedComponent: ComponentType): DndComponent<RequiredProps> {\n\t\treturn decorateHandler<RequiredProps, CollectedProps, TargetType>({\n\t\t\tcontainerDisplayName: 'DropTarget',\n\t\t\tcreateHandler: createTarget as any,\n\t\t\tregisterHandler: registerTarget,\n\t\t\tcreateMonitor: (manager: DragDropManager) =>\n\t\t\t\tnew DropTargetMonitorImpl(manager),\n\t\t\tcreateConnector: (backend: any) => new TargetConnector(backend),\n\t\t\tDecoratedComponent,\n\t\t\tgetType,\n\t\t\tcollect,\n\t\t\toptions,\n\t\t})\n\t} as any) as DndComponentEnhancer<CollectedProps>\n}\n"]}