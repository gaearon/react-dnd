{"version":3,"file":"DndContext.js","sourceRoot":"","sources":["../../src/common/DndContext.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,OAAO,CAAA;AACrC,OAAO,EAGN,qBAAqB,GACrB,MAAM,UAAU,CAAA;AASjB;;GAEG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,aAAa,CAAiB;IACvD,eAAe,EAAE,SAAS;CAC1B,CAAC,CAAA;AAEF;;;;GAIG;AACH,MAAM,UAAU,gBAAgB,CAC/B,OAAuB,EACvB,OAAwB,EACxB,OAAwB,EACxB,SAAmB;IAEnB,OAAO;QACN,eAAe,EAAE,qBAAqB,CACrC,OAAO,EACP,OAAO,EACP,OAAO,EACP,SAAS,CACT;KACD,CAAA;AACF,CAAC","sourcesContent":["import { createContext } from 'react'\nimport {\n\tDragDropManager,\n\tBackendFactory,\n\tcreateDragDropManager,\n} from 'dnd-core'\n\n/**\n * The React context type\n */\nexport interface DndContextType {\n\tdragDropManager: DragDropManager | undefined\n}\n\n/**\n * Create the React Context\n */\nexport const DndContext = createContext<DndContextType>({\n\tdragDropManager: undefined,\n})\n\n/**\n * Creates the context object we're providing\n * @param backend\n * @param context\n */\nexport function createDndContext<BackendContext, BackendOptions>(\n\tbackend: BackendFactory,\n\tcontext?: BackendContext,\n\toptions?: BackendOptions,\n\tdebugMode?: boolean,\n): DndContextType {\n\treturn {\n\t\tdragDropManager: createDragDropManager(\n\t\t\tbackend,\n\t\t\tcontext,\n\t\t\toptions,\n\t\t\tdebugMode,\n\t\t),\n\t}\n}\n"]}