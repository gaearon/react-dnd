{"version":3,"file":"DropTargetMonitorImpl.js","sourceRoot":"","sources":["../../src/common/DropTargetMonitorImpl.ts"],"names":[],"mappings":"AAQA,OAAO,EAAE,SAAS,EAAE,MAAM,sBAAsB,CAAA;AAGhD,IAAI,gBAAgB,GAAG,KAAK,CAAA;AAE5B,MAAM,OAAO,qBAAqB;IAIjC,YAAmB,OAAwB;QAFnC,aAAQ,GAAsB,IAAI,CAAA;QAGzC,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC,UAAU,EAAE,CAAA;IAC5C,CAAC;IAEM,gBAAgB,CAAC,QAA2B;QAClD,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;IACzB,CAAC;IAEM,YAAY;QAClB,OAAO,IAAI,CAAC,QAAQ,CAAA;IACrB,CAAC;IAEM,sBAAsB,CAC5B,QAAkB,EAClB,OAAkD;QAElD,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IACtE,CAAC;IAEM,OAAO;QACb,8EAA8E;QAC9E,0DAA0D;QAC1D,qDAAqD;QACrD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,OAAO,KAAK,CAAA;SACZ;QACD,SAAS,CACR,CAAC,gBAAgB,EACjB,2EAA2E;YAC1E,8EAA8E,CAC/E,CAAA;QAED,IAAI;YACH,gBAAgB,GAAG,IAAI,CAAA;YACvB,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;SAC1D;gBAAS;YACT,gBAAgB,GAAG,KAAK,CAAA;SACxB;IACF,CAAC;IAEM,MAAM,CAAC,OAA8B;QAC3C,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YACnB,OAAO,KAAK,CAAA;SACZ;QACD,OAAO,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IACjE,CAAC;IAEM,WAAW;QACjB,OAAO,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAA;IAC1C,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAA;IACtC,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,CAAA;IAC5C,CAAC;IAEM,OAAO;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAA;IACtC,CAAC;IAEM,sBAAsB;QAC5B,OAAO,IAAI,CAAC,eAAe,CAAC,sBAAsB,EAAE,CAAA;IACrD,CAAC;IAEM,4BAA4B;QAClC,OAAO,IAAI,CAAC,eAAe,CAAC,4BAA4B,EAAE,CAAA;IAC3D,CAAC;IAEM,qBAAqB;QAC3B,OAAO,IAAI,CAAC,eAAe,CAAC,qBAAqB,EAAE,CAAA;IACpD,CAAC;IAEM,eAAe;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAA;IAC9C,CAAC;IAEM,8BAA8B;QACpC,OAAO,IAAI,CAAC,eAAe,CAAC,8BAA8B,EAAE,CAAA;IAC7D,CAAC;CACD","sourcesContent":["import {\n\tDragDropManager,\n\tDragDropMonitor,\n\tUnsubscribe,\n\tListener,\n\tIdentifier,\n\tXYCoord,\n} from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport { DropTargetMonitor } from '../interfaces'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds: Identifier[] | undefined },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]}