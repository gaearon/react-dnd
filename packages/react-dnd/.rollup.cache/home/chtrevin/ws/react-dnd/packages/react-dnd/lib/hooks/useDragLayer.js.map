{"version":3,"file":"useDragLayer.js","sourceRoot":"","sources":["../../src/hooks/useDragLayer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAA;AAEjC,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAA;AACzD,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAA;AAEtD;;;GAGG;AACH,MAAM,UAAU,YAAY,CAC3B,OAAsD;IAEtD,MAAM,eAAe,GAAG,kBAAkB,EAAE,CAAA;IAC5C,MAAM,OAAO,GAAG,eAAe,CAAC,UAAU,EAAE,CAAA;IAC5C,MAAM,CAAC,SAAS,EAAE,eAAe,CAAC,GAAG,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAA;IAEnE,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,uBAAuB,CAAC,eAAe,CAAC,CAAC,CAAA;IACjE,SAAS,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,sBAAsB,CAAC,eAAe,CAAC,CAAC,CAAA;IAChE,OAAO,SAAS,CAAA;AACjB,CAAC","sourcesContent":["import { useEffect } from 'react'\nimport { DragLayerMonitor } from '../interfaces'\nimport { useDragDropManager } from './useDragDropManager'\nimport { useCollector } from './internal/useCollector'\n\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer<CollectedProps>(\n\tcollect: (monitor: DragLayerMonitor) => CollectedProps,\n): CollectedProps {\n\tconst dragDropManager = useDragDropManager()\n\tconst monitor = dragDropManager.getMonitor()\n\tconst [collected, updateCollected] = useCollector(monitor, collect)\n\n\tuseEffect(() => monitor.subscribeToOffsetChange(updateCollected))\n\tuseEffect(() => monitor.subscribeToStateChange(updateCollected))\n\treturn collected\n}\n"]}