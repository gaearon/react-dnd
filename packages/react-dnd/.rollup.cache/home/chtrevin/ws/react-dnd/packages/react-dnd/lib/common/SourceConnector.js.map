{"version":3,"file":"SourceConnector.js","sourceRoot":"","sources":["../../src/common/SourceConnector.ts"],"names":[],"mappings":"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","sourcesContent":["import { ReactElement, Ref, RefObject } from 'react'\nimport { wrapConnectorHooks } from './wrapConnectorHooks'\nimport { Backend, Unsubscribe, Identifier } from 'dnd-core'\nimport { isRef } from '../utils/isRef'\nimport { DragSourceOptions, DragPreviewOptions } from '../interfaces'\nimport { shallowEqual } from '@react-dnd/shallowequal'\n\nexport interface Connector {\n\thooks: any\n\tconnectTarget: any\n\treceiveHandlerId(handlerId: Identifier | null): void\n\treconnect(): void\n}\n\nexport class SourceConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdragSource: (\n\t\t\tnode: Element | ReactElement | Ref<any>,\n\t\t\toptions?: DragSourceOptions,\n\t\t) => {\n\t\t\tthis.clearDragSource()\n\t\t\tthis.dragSourceOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragSourceRef = node as RefObject<any>\n\t\t\t} else {\n\t\t\t\tthis.dragSourceNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragSource()\n\t\t},\n\t\tdragPreview: (node: any, options?: DragPreviewOptions) => {\n\t\t\tthis.clearDragPreview()\n\t\t\tthis.dragPreviewOptions = options || null\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dragPreviewRef = node\n\t\t\t} else {\n\t\t\t\tthis.dragPreviewNode = node\n\t\t\t}\n\t\t\tthis.reconnectDragPreview()\n\t\t},\n\t})\n\tprivate handlerId: Identifier | null = null\n\n\t// The drop target may either be attached via ref or connect function\n\tprivate dragSourceRef: RefObject<any> | null = null\n\tprivate dragSourceNode: any\n\tprivate dragSourceOptionsInternal: DragSourceOptions | null = null\n\tprivate dragSourceUnsubscribe: Unsubscribe | undefined\n\n\t// The drag preview may either be attached via ref or connect function\n\tprivate dragPreviewRef: RefObject<any> | null = null\n\tprivate dragPreviewNode: any\n\tprivate dragPreviewOptionsInternal: DragPreviewOptions | null = null\n\tprivate dragPreviewUnsubscribe: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDragSource: any = null\n\tprivate lastConnectedDragSourceOptions: any = null\n\tprivate lastConnectedDragPreview: any = null\n\tprivate lastConnectedDragPreviewOptions: any = null\n\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (this.handlerId === newHandlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dragSource\n\t}\n\n\tpublic get dragSourceOptions(): DragSourceOptions | null {\n\t\treturn this.dragSourceOptionsInternal\n\t}\n\tpublic set dragSourceOptions(options: DragSourceOptions | null) {\n\t\tthis.dragSourceOptionsInternal = options\n\t}\n\n\tpublic get dragPreviewOptions(): DragPreviewOptions | null {\n\t\treturn this.dragPreviewOptionsInternal\n\t}\n\n\tpublic set dragPreviewOptions(options: DragPreviewOptions | null) {\n\t\tthis.dragPreviewOptionsInternal = options\n\t}\n\n\tpublic reconnect(): void {\n\t\tthis.reconnectDragSource()\n\t\tthis.reconnectDragPreview()\n\t}\n\n\tprivate reconnectDragSource() {\n\t\tconst dragSource = this.dragSource\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragSourceChange() ||\n\t\t\tthis.didDragSourceOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragSource()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragSource) {\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragSource = dragSource\n\t\t\tthis.lastConnectedDragSourceOptions = this.dragSourceOptions\n\t\t\tthis.dragSourceUnsubscribe = this.backend.connectDragSource(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragSource,\n\t\t\t\tthis.dragSourceOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate reconnectDragPreview() {\n\t\tconst dragPreview = this.dragPreview\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didConnectedDragPreviewChange() ||\n\t\t\tthis.didDragPreviewOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDragPreview()\n\t\t}\n\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dragPreview) {\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDragPreview = dragPreview\n\t\t\tthis.lastConnectedDragPreviewOptions = this.dragPreviewOptions\n\t\t\tthis.dragPreviewUnsubscribe = this.backend.connectDragPreview(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdragPreview,\n\t\t\t\tthis.dragPreviewOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didConnectedDragSourceChange(): boolean {\n\t\treturn this.lastConnectedDragSource !== this.dragSource\n\t}\n\n\tprivate didConnectedDragPreviewChange(): boolean {\n\t\treturn this.lastConnectedDragPreview !== this.dragPreview\n\t}\n\n\tprivate didDragSourceOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragSourceOptions,\n\t\t\tthis.dragSourceOptions,\n\t\t)\n\t}\n\n\tprivate didDragPreviewOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDragPreviewOptions,\n\t\t\tthis.dragPreviewOptions,\n\t\t)\n\t}\n\n\tprivate disconnectDragSource() {\n\t\tif (this.dragSourceUnsubscribe) {\n\t\t\tthis.dragSourceUnsubscribe()\n\t\t\tthis.dragSourceUnsubscribe = undefined\n\t\t}\n\t}\n\n\tprivate disconnectDragPreview() {\n\t\tif (this.dragPreviewUnsubscribe) {\n\t\t\tthis.dragPreviewUnsubscribe()\n\t\t\tthis.dragPreviewUnsubscribe = undefined\n\t\t\tthis.dragPreviewNode = null\n\t\t\tthis.dragPreviewRef = null\n\t\t}\n\t}\n\n\tprivate get dragSource() {\n\t\treturn (\n\t\t\tthis.dragSourceNode || (this.dragSourceRef && this.dragSourceRef.current)\n\t\t)\n\t}\n\n\tprivate get dragPreview() {\n\t\treturn (\n\t\t\tthis.dragPreviewNode ||\n\t\t\t(this.dragPreviewRef && this.dragPreviewRef.current)\n\t\t)\n\t}\n\n\tprivate clearDragSource() {\n\t\tthis.dragSourceNode = null\n\t\tthis.dragSourceRef = null\n\t}\n\n\tprivate clearDragPreview() {\n\t\tthis.dragPreviewNode = null\n\t\tthis.dragPreviewRef = null\n\t}\n}\n"]}