{"version":3,"file":"TargetConnector.js","sourceRoot":"","sources":["../../src/common/TargetConnector.ts"],"names":[],"mappings":"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","sourcesContent":["import { RefObject } from 'react'\nimport { shallowEqual } from '@react-dnd/shallowequal'\nimport { wrapConnectorHooks } from './wrapConnectorHooks'\nimport { Backend, Unsubscribe, Identifier } from 'dnd-core'\nimport { isRef } from '../utils/isRef'\nimport { Connector } from './SourceConnector'\n\nexport class TargetConnector implements Connector {\n\tpublic hooks = wrapConnectorHooks({\n\t\tdropTarget: (node: any, options: any) => {\n\t\t\tthis.clearDropTarget()\n\t\t\tthis.dropTargetOptions = options\n\t\t\tif (isRef(node)) {\n\t\t\t\tthis.dropTargetRef = node\n\t\t\t} else {\n\t\t\t\tthis.dropTargetNode = node\n\t\t\t}\n\t\t\tthis.reconnect()\n\t\t},\n\t})\n\n\tprivate handlerId: Identifier | null = null\n\t// The drop target may either be attached via ref or connect function\n\tprivate dropTargetRef: RefObject<any> | null = null\n\tprivate dropTargetNode: any\n\tprivate dropTargetOptionsInternal: any = null\n\tprivate unsubscribeDropTarget: Unsubscribe | undefined\n\n\tprivate lastConnectedHandlerId: Identifier | null = null\n\tprivate lastConnectedDropTarget: any = null\n\tprivate lastConnectedDropTargetOptions: any = null\n\tprivate readonly backend: Backend\n\n\tpublic constructor(backend: Backend) {\n\t\tthis.backend = backend\n\t}\n\n\tpublic get connectTarget(): any {\n\t\treturn this.dropTarget\n\t}\n\n\tpublic reconnect(): void {\n\t\t// if nothing has changed then don't resubscribe\n\t\tconst didChange =\n\t\t\tthis.didHandlerIdChange() ||\n\t\t\tthis.didDropTargetChange() ||\n\t\t\tthis.didOptionsChange()\n\n\t\tif (didChange) {\n\t\t\tthis.disconnectDropTarget()\n\t\t}\n\n\t\tconst dropTarget = this.dropTarget\n\t\tif (!this.handlerId) {\n\t\t\treturn\n\t\t}\n\t\tif (!dropTarget) {\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\treturn\n\t\t}\n\n\t\tif (didChange) {\n\t\t\tthis.lastConnectedHandlerId = this.handlerId\n\t\t\tthis.lastConnectedDropTarget = dropTarget\n\t\t\tthis.lastConnectedDropTargetOptions = this.dropTargetOptions\n\n\t\t\tthis.unsubscribeDropTarget = this.backend.connectDropTarget(\n\t\t\t\tthis.handlerId,\n\t\t\t\tdropTarget,\n\t\t\t\tthis.dropTargetOptions,\n\t\t\t)\n\t\t}\n\t}\n\n\tpublic receiveHandlerId(newHandlerId: Identifier | null): void {\n\t\tif (newHandlerId === this.handlerId) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.handlerId = newHandlerId\n\t\tthis.reconnect()\n\t}\n\n\tpublic get dropTargetOptions(): any {\n\t\treturn this.dropTargetOptionsInternal\n\t}\n\tpublic set dropTargetOptions(options: any) {\n\t\tthis.dropTargetOptionsInternal = options\n\t}\n\n\tprivate didHandlerIdChange(): boolean {\n\t\treturn this.lastConnectedHandlerId !== this.handlerId\n\t}\n\n\tprivate didDropTargetChange(): boolean {\n\t\treturn this.lastConnectedDropTarget !== this.dropTarget\n\t}\n\n\tprivate didOptionsChange(): boolean {\n\t\treturn !shallowEqual(\n\t\t\tthis.lastConnectedDropTargetOptions,\n\t\t\tthis.dropTargetOptions,\n\t\t)\n\t}\n\n\tprivate disconnectDropTarget() {\n\t\tif (this.unsubscribeDropTarget) {\n\t\t\tthis.unsubscribeDropTarget()\n\t\t\tthis.unsubscribeDropTarget = undefined\n\t\t}\n\t}\n\n\tprivate get dropTarget() {\n\t\treturn (\n\t\t\tthis.dropTargetNode || (this.dropTargetRef && this.dropTargetRef.current)\n\t\t)\n\t}\n\n\tprivate clearDropTarget() {\n\t\tthis.dropTargetRef = null\n\t\tthis.dropTargetNode = null\n\t}\n}\n"]}