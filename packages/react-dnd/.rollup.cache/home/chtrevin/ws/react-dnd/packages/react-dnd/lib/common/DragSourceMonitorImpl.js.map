{"version":3,"file":"DragSourceMonitorImpl.js","sourceRoot":"","sources":["../../src/common/DragSourceMonitorImpl.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tDragDropManager,\n\tDragDropMonitor,\n\tUnsubscribe,\n\tListener,\n\tIdentifier,\n\tXYCoord,\n} from 'dnd-core'\nimport { invariant } from '@react-dnd/invariant'\nimport { DragSourceMonitor } from '../interfaces'\n\nlet isCallingCanDrag = false\nlet isCallingIsDragging = false\n\nexport class DragSourceMonitorImpl implements DragSourceMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate sourceId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(sourceId: Identifier | null): void {\n\t\tthis.sourceId = sourceId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.sourceId\n\t}\n\n\tpublic canDrag(): boolean {\n\t\tinvariant(\n\t\t\t!isCallingCanDrag,\n\t\t\t'You may not call monitor.canDrag() inside your canDrag() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrag = true\n\t\t\treturn this.internalMonitor.canDragSource(this.sourceId as Identifier)\n\t\t} finally {\n\t\t\tisCallingCanDrag = false\n\t\t}\n\t}\n\n\tpublic isDragging(): boolean {\n\t\tif (!this.sourceId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingIsDragging,\n\t\t\t'You may not call monitor.isDragging() inside your isDragging() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-source-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingIsDragging = true\n\t\t\treturn this.internalMonitor.isDraggingSource(this.sourceId)\n\t\t} finally {\n\t\t\tisCallingIsDragging = false\n\t\t}\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds: Identifier[] | undefined },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic isDraggingSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.isDraggingSource(sourceId)\n\t}\n\n\tpublic isOverTarget(\n\t\ttargetId: Identifier,\n\t\toptions?: { shallow: boolean },\n\t): boolean {\n\t\treturn this.internalMonitor.isOverTarget(targetId, options)\n\t}\n\n\tpublic getTargetIds(): Identifier[] {\n\t\treturn this.internalMonitor.getTargetIds()\n\t}\n\n\tpublic isSourcePublic(): boolean | null {\n\t\treturn this.internalMonitor.isSourcePublic()\n\t}\n\n\tpublic getSourceId(): Identifier | null {\n\t\treturn this.internalMonitor.getSourceId()\n\t}\n\n\tpublic subscribeToOffsetChange(listener: Listener): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToOffsetChange(listener)\n\t}\n\n\tpublic canDragSource(sourceId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDragSource(sourceId)\n\t}\n\n\tpublic canDropOnTarget(targetId: Identifier): boolean {\n\t\treturn this.internalMonitor.canDropOnTarget(targetId)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]}