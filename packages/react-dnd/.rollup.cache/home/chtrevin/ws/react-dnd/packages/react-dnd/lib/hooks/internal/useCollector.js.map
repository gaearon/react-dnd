{"version":3,"file":"useCollector.js","sourceRoot":"","sources":["../../../src/hooks/internal/useCollector.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,yBAAyB,CAAA;AACtD,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AAC7C,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAA;AAEvE;;;;;GAKG;AACH,MAAM,UAAU,YAAY,CAC3B,OAAU,EACV,OAA0B,EAC1B,QAAqB;IAErB,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;IAElE,MAAM,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE;QACxC,MAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;QAClC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE;YACxC,YAAY,CAAC,SAAS,CAAC,CAAA;YACvB,IAAI,QAAQ,EAAE;gBACb,QAAQ,EAAE,CAAA;aACV;SACD;IACF,CAAC,EAAE,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC,CAAA;IAElC,yDAAyD;IACzD,8CAA8C;IAC9C,yBAAyB,CAAC,eAAe,EAAE,EAAE,CAAC,CAAA;IAE9C,OAAO,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;AACpC,CAAC","sourcesContent":["import { shallowEqual } from '@react-dnd/shallowequal'\nimport { useState, useCallback } from 'react'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\n/**\n *\n * @param monitor The monitor to collect state from\n * @param collect The collecting function\n * @param onUpdate A method to invoke when updates occur\n */\nexport function useCollector<T, S>(\n\tmonitor: T,\n\tcollect: (monitor: T) => S,\n\tonUpdate?: () => void,\n): [S, () => void] {\n\tconst [collected, setCollected] = useState(() => collect(monitor))\n\n\tconst updateCollected = useCallback(() => {\n\t\tconst nextValue = collect(monitor)\n\t\tif (!shallowEqual(collected, nextValue)) {\n\t\t\tsetCollected(nextValue)\n\t\t\tif (onUpdate) {\n\t\t\t\tonUpdate()\n\t\t\t}\n\t\t}\n\t}, [collected, monitor, onUpdate])\n\n\t// update the collected properties after the first render\n\t// and the components are attached to dnd-core\n\tuseIsomorphicLayoutEffect(updateCollected, [])\n\n\treturn [collected, updateCollected]\n}\n"]}