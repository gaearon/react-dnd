{"version":3,"file":"DragLayer.js","sourceRoot":"","sources":["../../src/decorators/DragLayer.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n\tcreateRef,\n\tRefObject,\n\tComponent,\n\tComponentType as RComponentType,\n} from 'react'\nimport { DragDropManager, Unsubscribe } from 'dnd-core'\nimport { shallowEqual } from '@react-dnd/shallowequal'\nimport { invariant } from '@react-dnd/invariant'\nimport hoistStatics from 'hoist-non-react-statics'\nimport { DndContext } from '../common/DndContext'\nimport { DndOptions } from '../interfaces'\nimport { isPlainObject } from '../utils/js_utils'\nimport { DragLayerCollector, DndComponentEnhancer } from './interfaces'\nimport { isRefable, checkDecoratorArguments } from './utils'\n\n/**\n * @deprecated - The decorator-based API will be removed in a future major version\n * @param collect The props collector function\n * @param options The DnD options\n */\nexport function DragLayer<RequiredProps, CollectedProps = any>(\n\tcollect: DragLayerCollector<RequiredProps, CollectedProps>,\n\toptions: DndOptions<RequiredProps> = {},\n): DndComponentEnhancer<CollectedProps> {\n\tcheckDecoratorArguments('DragLayer', 'collect[, options]', collect, options)\n\tinvariant(\n\t\ttypeof collect === 'function',\n\t\t'Expected \"collect\" provided as the first argument to DragLayer to be a function that collects props to inject into the component. ',\n\t\t'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer',\n\t\tcollect,\n\t)\n\tinvariant(\n\t\tisPlainObject(options),\n\t\t'Expected \"options\" provided as the second argument to DragLayer to be a plain object when specified. ' +\n\t\t\t'Instead, received %s. Read more: http://react-dnd.github.io/react-dnd/docs/api/drag-layer',\n\t\toptions,\n\t)\n\n\treturn (function decorateLayer<\n\t\tComponentType extends RComponentType<RequiredProps & CollectedProps>\n\t>(DecoratedComponent: ComponentType): DndComponentEnhancer<CollectedProps> {\n\t\tconst Decorated = DecoratedComponent as any\n\t\tconst { arePropsEqual = shallowEqual } = options\n\t\tconst displayName = Decorated.displayName || Decorated.name || 'Component'\n\n\t\tclass DragLayerContainer extends Component<RequiredProps> {\n\t\t\tpublic static displayName = `DragLayer(${displayName})`\n\t\t\tpublic static DecoratedComponent = DecoratedComponent\n\n\t\t\tprivate manager: DragDropManager | undefined\n\t\t\tprivate isCurrentlyMounted = false\n\t\t\tprivate unsubscribeFromOffsetChange: Unsubscribe | undefined\n\t\t\tprivate unsubscribeFromStateChange: Unsubscribe | undefined\n\t\t\tprivate ref: RefObject<any> = createRef()\n\n\t\t\tpublic getDecoratedComponentInstance() {\n\t\t\t\tinvariant(\n\t\t\t\t\tthis.ref.current,\n\t\t\t\t\t'In order to access an instance of the decorated component, it must either be a class component or use React.forwardRef()',\n\t\t\t\t)\n\t\t\t\treturn this.ref.current\n\t\t\t}\n\n\t\t\tpublic shouldComponentUpdate(nextProps: any, nextState: any) {\n\t\t\t\treturn (\n\t\t\t\t\t!arePropsEqual(nextProps, this.props) ||\n\t\t\t\t\t!shallowEqual(nextState, this.state)\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tpublic componentDidMount() {\n\t\t\t\tthis.isCurrentlyMounted = true\n\t\t\t\tthis.handleChange()\n\t\t\t}\n\n\t\t\tpublic componentWillUnmount() {\n\t\t\t\tthis.isCurrentlyMounted = false\n\t\t\t\tif (this.unsubscribeFromOffsetChange) {\n\t\t\t\t\tthis.unsubscribeFromOffsetChange()\n\t\t\t\t\tthis.unsubscribeFromOffsetChange = undefined\n\t\t\t\t}\n\t\t\t\tif (this.unsubscribeFromStateChange) {\n\t\t\t\t\tthis.unsubscribeFromStateChange()\n\t\t\t\t\tthis.unsubscribeFromStateChange = undefined\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tpublic render() {\n\t\t\t\treturn (\n\t\t\t\t\t<DndContext.Consumer>\n\t\t\t\t\t\t{({ dragDropManager }) => {\n\t\t\t\t\t\t\tif (dragDropManager === undefined) {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.receiveDragDropManager(dragDropManager)\n\t\t\t\t\t\t\t// Let componentDidMount fire to initialize the collected state\n\t\t\t\t\t\t\tif (!this.isCurrentlyMounted) {\n\t\t\t\t\t\t\t\treturn null\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Decorated\n\t\t\t\t\t\t\t\t\t{...this.props}\n\t\t\t\t\t\t\t\t\t{...this.state}\n\t\t\t\t\t\t\t\t\tref={isRefable(Decorated) ? this.ref : null}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}}\n\t\t\t\t\t</DndContext.Consumer>\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tprivate receiveDragDropManager(dragDropManager: DragDropManager) {\n\t\t\t\tif (this.manager !== undefined) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tthis.manager = dragDropManager\n\t\t\t\tinvariant(\n\t\t\t\t\ttypeof dragDropManager === 'object',\n\t\t\t\t\t'Could not find the drag and drop manager in the context of %s. ' +\n\t\t\t\t\t\t'Make sure to render a DndProvider component in your top-level component. ' +\n\t\t\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/troubleshooting#could-not-find-the-drag-and-drop-manager-in-the-context',\n\t\t\t\t\tdisplayName,\n\t\t\t\t\tdisplayName,\n\t\t\t\t)\n\n\t\t\t\tconst monitor = this.manager.getMonitor()\n\t\t\t\tthis.unsubscribeFromOffsetChange = monitor.subscribeToOffsetChange(\n\t\t\t\t\tthis.handleChange,\n\t\t\t\t)\n\t\t\t\tthis.unsubscribeFromStateChange = monitor.subscribeToStateChange(\n\t\t\t\t\tthis.handleChange,\n\t\t\t\t)\n\t\t\t}\n\n\t\t\tprivate handleChange = () => {\n\t\t\t\tif (!this.isCurrentlyMounted) {\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\tconst nextState = this.getCurrentState()\n\t\t\t\tif (!shallowEqual(nextState, this.state)) {\n\t\t\t\t\tthis.setState(nextState)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tprivate getCurrentState() {\n\t\t\t\tif (!this.manager) {\n\t\t\t\t\treturn {}\n\t\t\t\t}\n\t\t\t\tconst monitor = this.manager.getMonitor()\n\t\t\t\treturn collect(monitor, this.props)\n\t\t\t}\n\t\t}\n\n\t\treturn hoistStatics(DragLayerContainer, DecoratedComponent) as any\n\t} as any) as DndComponentEnhancer<CollectedProps>\n}\n"]}