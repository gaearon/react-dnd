{"version":3,"file":"drop.js","sourceRoot":"","sources":["../../../src/hooks/internal/drop.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,OAAO,EAAoB,MAAM,OAAO,CAAA;AAEjD,OAAO,EAAE,cAAc,EAAE,MAAM,2BAA2B,CAAA;AAC1D,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAA;AAC1D,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAA;AAC9D,OAAO,EAAE,qBAAqB,EAAE,MAAM,oCAAoC,CAAA;AAC1E,OAAO,EAAE,yBAAyB,EAAE,MAAM,6BAA6B,CAAA;AAEvE,MAAM,UAAU,oBAAoB;IACnC,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAA;IACpC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,qBAAqB,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;IAC5E,MAAM,SAAS,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,eAAe,CAAC,OAAO,CAAC,UAAU,EAAE,CAAC,EAAE;QAC1E,OAAO;KACP,CAAC,CAAA;IACF,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAA;AAC5B,CAAC;AAED,MAAM,UAAU,cAAc,CAK7B,IAEC,EACD,OAA0B,EAC1B,SAAc;IAEd,MAAM,OAAO,GAAG,kBAAkB,EAAE,CAAA;IACpC,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE;QAC5B,OAAO;YACN,OAAO;gBACN,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;gBAChC,OAAO,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA;YAC5D,CAAC;YACD,KAAK;gBACJ,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;gBAC9B,IAAI,KAAK,EAAE;oBACV,KAAK,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAA;iBACjC;YACF,CAAC;YACD,IAAI;gBACH,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,OAAO,CAAA;gBAC7B,IAAI,IAAI,EAAE;oBACT,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAA;iBACvC;YACF,CAAC;SACa,CAAA;IAChB,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAA;IAEb,yBAAyB,CACxB,SAAS,eAAe;QACvB,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,cAAc,CAC7C,IAAI,CAAC,OAAO,CAAC,MAAM,EACnB,OAAO,EACP,OAAO,CACP,CAAA;QACD,OAAO,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAA;QACnC,SAAS,CAAC,gBAAgB,CAAC,SAAS,CAAC,CAAA;QACrC,OAAO,UAAU,CAAA;IAClB,CAAC,EACD,CAAC,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CACzC,CAAA;AACF,CAAC","sourcesContent":["import {\n\tDragObjectWithType,\n\tDropTargetMonitor,\n\tDropTargetHookSpec,\n} from '../../interfaces'\nimport { useMemo, MutableRefObject } from 'react'\nimport { DropTarget } from 'dnd-core'\nimport { registerTarget } from '../../common/registration'\nimport { useDragDropManager } from '../useDragDropManager'\nimport { TargetConnector } from '../../common/TargetConnector'\nimport { DropTargetMonitorImpl } from '../../common/DropTargetMonitorImpl'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\nexport function useDropTargetMonitor(): [DropTargetMonitor, TargetConnector] {\n\tconst manager = useDragDropManager()\n\tconst monitor = useMemo(() => new DropTargetMonitorImpl(manager), [manager])\n\tconst connector = useMemo(() => new TargetConnector(manager.getBackend()), [\n\t\tmanager,\n\t])\n\treturn [monitor, connector]\n}\n\nexport function useDropHandler<\n\tDragObject extends DragObjectWithType,\n\tDropResult,\n\tCustomProps\n>(\n\tspec: MutableRefObject<\n\t\tDropTargetHookSpec<DragObject, DropResult, CustomProps>\n\t>,\n\tmonitor: DropTargetMonitor,\n\tconnector: any,\n) {\n\tconst manager = useDragDropManager()\n\tconst handler = useMemo(() => {\n\t\treturn {\n\t\t\tcanDrop() {\n\t\t\t\tconst { canDrop } = spec.current\n\t\t\t\treturn canDrop ? canDrop(monitor.getItem(), monitor) : true\n\t\t\t},\n\t\t\thover() {\n\t\t\t\tconst { hover } = spec.current\n\t\t\t\tif (hover) {\n\t\t\t\t\thover(monitor.getItem(), monitor)\n\t\t\t\t}\n\t\t\t},\n\t\t\tdrop() {\n\t\t\t\tconst { drop } = spec.current\n\t\t\t\tif (drop) {\n\t\t\t\t\treturn drop(monitor.getItem(), monitor)\n\t\t\t\t}\n\t\t\t},\n\t\t} as DropTarget\n\t}, [monitor])\n\n\tuseIsomorphicLayoutEffect(\n\t\tfunction registerHandler() {\n\t\t\tconst [handlerId, unregister] = registerTarget(\n\t\t\t\tspec.current.accept,\n\t\t\t\thandler,\n\t\t\t\tmanager,\n\t\t\t)\n\t\t\tmonitor.receiveHandlerId(handlerId)\n\t\t\tconnector.receiveHandlerId(handlerId)\n\t\t\treturn unregister\n\t\t},\n\t\t[monitor, connector, spec.current.accept],\n\t)\n}\n"]}