{"version":3,"file":"drag.js","sourceRoot":"","sources":["../../../src/hooks/internal/drag.ts"],"names":[],"mappings":"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","sourcesContent":["import { useMemo, MutableRefObject } from 'react'\nimport { invariant } from '@react-dnd/invariant'\nimport {\n\tDragSourceHookSpec,\n\tDragObjectWithType,\n\tDragSourceMonitor,\n} from '../../interfaces'\nimport { DragDropMonitor, DragSource } from 'dnd-core'\nimport { registerSource } from '../../common/registration'\nimport { useDragDropManager } from '../useDragDropManager'\nimport { DragSourceMonitorImpl } from '../../common/DragSourceMonitorImpl'\nimport { SourceConnector } from '../../common/SourceConnector'\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect'\n\nexport function useDragSourceMonitor(): [DragSourceMonitor, SourceConnector] {\n\tconst manager = useDragDropManager()\n\tconst monitor = useMemo(() => new DragSourceMonitorImpl(manager), [manager])\n\tconst connector = useMemo(() => new SourceConnector(manager.getBackend()), [\n\t\tmanager,\n\t])\n\treturn [monitor, connector]\n}\n\nexport function useDragHandler<\n\tDragObject extends DragObjectWithType,\n\tDropResult,\n\tCustomProps\n>(\n\tspec: MutableRefObject<\n\t\tDragSourceHookSpec<DragObject, DropResult, CustomProps>\n\t>,\n\tmonitor: DragSourceMonitor,\n\tconnector: any,\n) {\n\tconst manager = useDragDropManager()\n\tconst handler = useMemo(() => {\n\t\treturn {\n\t\t\tbeginDrag() {\n\t\t\t\tconst { begin, item } = spec.current\n\t\t\t\tif (begin) {\n\t\t\t\t\tconst beginResult = begin(monitor)\n\t\t\t\t\tinvariant(\n\t\t\t\t\t\tbeginResult == null || typeof beginResult === 'object',\n\t\t\t\t\t\t'dragSpec.begin() must either return an object, undefined, or null',\n\t\t\t\t\t)\n\t\t\t\t\treturn beginResult || item || {}\n\t\t\t\t}\n\t\t\t\treturn item || {}\n\t\t\t},\n\t\t\tcanDrag() {\n\t\t\t\tif (typeof spec.current.canDrag === 'boolean') {\n\t\t\t\t\treturn spec.current.canDrag\n\t\t\t\t} else if (typeof spec.current.canDrag === 'function') {\n\t\t\t\t\treturn spec.current.canDrag(monitor)\n\t\t\t\t} else {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t},\n\t\t\tisDragging(globalMonitor: DragDropMonitor, target) {\n\t\t\t\tconst { isDragging } = spec.current\n\t\t\t\treturn isDragging\n\t\t\t\t\t? isDragging(monitor)\n\t\t\t\t\t: target === globalMonitor.getSourceId()\n\t\t\t},\n\t\t\tendDrag() {\n\t\t\t\tconst { end } = spec.current\n\t\t\t\tif (end) {\n\t\t\t\t\tend(monitor.getItem(), monitor)\n\t\t\t\t}\n\t\t\t\tconnector.reconnect()\n\t\t\t},\n\t\t} as DragSource\n\t}, [])\n\n\tuseIsomorphicLayoutEffect(function registerHandler() {\n\t\tconst [handlerId, unregister] = registerSource(\n\t\t\tspec.current.item.type,\n\t\t\thandler,\n\t\t\tmanager,\n\t\t)\n\t\tmonitor.receiveHandlerId(handlerId)\n\t\tconnector.receiveHandlerId(handlerId)\n\t\treturn unregister\n\t}, [])\n}\n"]}