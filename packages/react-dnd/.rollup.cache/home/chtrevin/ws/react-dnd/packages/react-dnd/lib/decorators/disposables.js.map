{"version":3,"file":"disposables.js","sourceRoot":"","sources":["../../src/decorators/disposables.ts"],"names":[],"mappings":"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","sourcesContent":["import { isFunction, noop } from '../utils/js_utils'\n\n/**\n * Provides a set of static methods for creating Disposables.\n * @param {Function} action Action to run during the first call to dispose.\n * The action is guaranteed to be run at most once.\n */\nexport class Disposable {\n\t/**\n\t * Gets the disposable that does nothing when disposed.\n\t */\n\tpublic static empty = { dispose: noop }\n\n\t/**\n\t * Validates whether the given object is a disposable\n\t * @param {Object} Object to test whether it has a dispose method\n\t * @returns {Boolean} true if a disposable object, else false.\n\t */\n\tpublic static isDisposable(d: any): boolean {\n\t\treturn Boolean(d && isFunction(d.dispose))\n\t}\n\n\tpublic static _fixup(result: any) {\n\t\treturn Disposable.isDisposable(result) ? result : Disposable.empty\n\t}\n\n\t/**\n\t * Creates a disposable object that invokes the specified action when disposed.\n\t * @param {Function} dispose Action to run during the first call to dispose.\n\t * The action is guaranteed to be run at most once.\n\t * @return {Disposable} The disposable object that runs the given action upon disposal.\n\t */\n\tpublic static create(action: any): Disposable {\n\t\treturn new Disposable(action)\n\t}\n\n\tprivate isDisposed = false\n\tprivate action: () => void\n\n\tpublic constructor(action: any) {\n\t\tthis.action = isFunction(action) ? action : noop\n\t}\n\n\t/** Performs the task of cleaning up resources. */\n\tpublic dispose() {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.action()\n\t\t\tthis.isDisposed = true\n\t\t}\n\t}\n}\n\n/**\n * Represents a group of disposable resources that are disposed together.\n * @constructor\n */\nexport class CompositeDisposable {\n\tprivate isDisposed = false\n\tprivate disposables: Disposable[]\n\n\tpublic constructor(...disposables: Disposable[]) {\n\t\tthis.disposables = disposables\n\t}\n\n\t/**\n\t * Adds a disposable to the CompositeDisposable or disposes the disposable if the CompositeDisposable is disposed.\n\t * @param {Any} item Disposable to add.\n\t */\n\tpublic add(item: Disposable): void {\n\t\tif (this.isDisposed) {\n\t\t\titem.dispose()\n\t\t} else {\n\t\t\tthis.disposables.push(item)\n\t\t}\n\t}\n\n\t/**\n\t * Removes and disposes the first occurrence of a disposable from the CompositeDisposable.\n\t * @param {Any} item Disposable to remove.\n\t * @returns {Boolean} true if found; false otherwise.\n\t */\n\tpublic remove(item: Disposable): boolean {\n\t\tlet shouldDispose = false\n\t\tif (!this.isDisposed) {\n\t\t\tconst idx = this.disposables.indexOf(item)\n\t\t\tif (idx !== -1) {\n\t\t\t\tshouldDispose = true\n\t\t\t\tthis.disposables.splice(idx, 1)\n\t\t\t\titem.dispose()\n\t\t\t}\n\t\t}\n\t\treturn shouldDispose\n\t}\n\n\t/**\n\t *  Disposes all disposables in the group and removes them from the group but\n\t *  does not dispose the CompositeDisposable.\n\t */\n\tpublic clear(): void {\n\t\tif (!this.isDisposed) {\n\t\t\tconst len = this.disposables.length\n\t\t\tconst currentDisposables = new Array(len)\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tcurrentDisposables[i] = this.disposables[i]\n\t\t\t}\n\t\t\tthis.disposables = []\n\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tcurrentDisposables[i].dispose()\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *  Disposes all disposables in the group and removes them from the group.\n\t */\n\tpublic dispose(): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.isDisposed = true\n\t\t\tconst len = this.disposables.length\n\t\t\tconst currentDisposables = new Array(len)\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tcurrentDisposables[i] = this.disposables[i]\n\t\t\t}\n\t\t\tthis.disposables = []\n\n\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\tcurrentDisposables[i].dispose()\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Represents a disposable resource whose underlying disposable resource can\n * be replaced by another disposable resource, causing automatic disposal of\n * the previous underlying disposable resource.\n */\nexport class SerialDisposable {\n\tprivate isDisposed = false\n\tprivate current: Disposable | undefined\n\n\t/**\n\t * Gets the underlying disposable.\n\t * @returns {Any} the underlying disposable.\n\t */\n\tpublic getDisposable(): Disposable | undefined {\n\t\treturn this.current\n\t}\n\n\tpublic setDisposable(value: Disposable): void {\n\t\tconst shouldDispose = this.isDisposed\n\t\tif (!shouldDispose) {\n\t\t\tconst old = this.current\n\t\t\tthis.current = value\n\t\t\tif (old) {\n\t\t\t\told.dispose()\n\t\t\t}\n\t\t}\n\n\t\tif (shouldDispose && value) {\n\t\t\tvalue.dispose()\n\t\t}\n\t}\n\n\t/** Performs the task of cleaning up resources. */\n\tpublic dispose(): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.isDisposed = true\n\t\t\tconst old = this.current\n\t\t\tthis.current = undefined\n\t\t\tif (old) {\n\t\t\t\told.dispose()\n\t\t\t}\n\t\t}\n\t}\n}\n"]}